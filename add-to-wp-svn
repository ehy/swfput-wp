#! /bin/sh
#
# place current state of things in $SVNLOCAL/trunk and update
#

PROG=${0##*/}
PROJ=swfput

: ${TRUNK_BACKUP:=yes}

THISD=$PWD
#SVNLOCAL="$THISD"/wordpress-svn
SVNLOCAL="$THISD"/wordpress-repo

e2 () { printf '%s: %s\n' "$PROG" "$*" 1>&2; }
fail () { e2 "$@"; exit 1; }

test -d "$SVNLOCAL" || fail cannot find "$SVNLOCAL", where am I\?

VRS=$(/bin/sh ./version.sh) || fail OOPS no goodness with version.sh

ZD="${PROJ}-${VRS}"
ZF="${ZD}.zip"

make cleanall && make && test -f "$ZF" \
	|| fail cannot make and stuff like that

ZF="../$ZF"

cd "$SVNLOCAL" || fail cd "$SVNLOCAL" failure

## may fail OK
rm -rf "$ZD" || echo >/dev/null

unzip "$ZF" || fail fail unzip "$ZF"
test -d "$ZD" || fail WTF: fail test -d "$ZD"

test -d trunk || fail WTF: fail test -d trunk

svn up || fail fail svn up, what\'s up with that\?

# OK, do it.
# Optionally backup trunk for safety.
test Xyes = X"$TRUNK_BACKUP" && \
	{ tar cf - trunk | gzip > ../trunk-bak.tgz || \
	fail could not backup trunk; }

# remove removed directories
find trunk -type d -print | while read -r F; do
	test Xtrunk = X"$F" && continue
	# hyper paranoia: guard against bad order (i.e. already rm'd)
	test -d "$F" || continue

	FF=${F#*/}
	DD=${FF%%/*}
	test X.svn = X"$FF" || test X.svn = X"$DD" && continue

	O="$ZD/$FF"
	test -d "$O" && continue

	# was removed in current, so remove
	svn rm --force "$F" || fail fail svn rm --force "$F"
done || fail failed unused directory removal

# remove removed files
find trunk -type f -print | while read -r F; do
	FF=${F#*/}
	DD=${FF%%/*}
	test X.svn = X"$FF" || test X.svn = X"$DD" && continue

	O="$ZD/$FF"
	test -f "$O" && continue

	# was removed in current, so remove
	svn rm "$F" || fail fail svn rm "$F"
done || fail failed unused file removal

# add new directories
find "$ZD" -type d -print | while read -r F; do
	test X"$ZD" = X"$F" && continue
	FF=${F#*/}
	O=trunk/"$FF"

	test -d "$O" && continue
	test -e "$O" && \
		fail BAD: \""$O"\" exists, but is not a directory, but it needs to be\!

	# it's needed
	svn mkdir --parents "$O" || fail fail svn mkdir --parents "$O"
done || fail failed adding new directories

# add new files
find "$ZD" -type f -print | while read -r F; do
	FF=${F#*/}
	O=trunk/"$FF"

	test -f "$O" && continue
	test -e "$O" && \
		fail BAD: \""$O"\" exists, but is not a regular file, but it needs to be\!

	# it's needed
	cp -p "$F" "$O" || fail fail cp -p "$F" "$O"
	svn add "$O" || fail fail svn add "$O"
done || fail failed adding new files

# update modified files
find "$ZD" -type f -print | while read -r F; do
	FF=${F#*/}
	O=trunk/"$FF"

	test -f "$O" || \
		fail BAD: \""$O"\" does not exist, or is not a regular file, but it needs to be\!
	cmp "$F" "$O" && continue

	# it's needed
	cp -f -p "$F" "$O" || fail fail cp -f -p "$F" "$O"
done || fail failed updating changed files

# Looks good
rm -rf "$ZD" || fail failed to remove "$ZD"
svn up || fail OY\! failed final svn up\!
e2 YIP\! all done successfully.
ls -ld trunk
exit 0

