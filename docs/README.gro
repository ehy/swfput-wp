
\" CR gives courier (tt):
\" \f(CRhttp://netpbm.sourceforge.net/\fR.
.TL
README for SWFPut
.br
A Flash Video Player Plugin for WordPress
.AU
Ed Hynan <edhynan@gmail.com>
<<CMAC>>
.SH
What is it?
.PP
\fBSWFPut\fP is a cleverly named plugin for
the popular \fIWordPress\fP content management and weblog
software. It provides a video player program
for the flash plugin and the means to configure
an instance with a video source and playback
attributes.
There are two separate components:
the flash video player, and the WP plugin proper.
The video player is delivered to site visitors
by the plugin in the traditional <object ...>
block with the necessary arguments. Flash video
objects may be placed in posts and pages, or in
the widget areas supported by your theme (i.e.,
the plugin includes a widget).
Video is placed in posts and pages with a
\fIshortcode\fP; if you do not know what a
shortcode is, or do not want to deal with them,
that's no problem.
(In fact, it is preferable that the shortcodes
\fInot\fP be hand-edited, and they will not
be discussed in detail here.) The plugin adds to
the administrative interface a full featured
form to setup and add, or edit, or delete
video objects, so the user does not need
to be troubled with shortcodes (they will be visible
in the editor; you will get used to them).
The flash video widget has a similar full
featured form.
.PP
The plugin does not add any \fIJavaScript\fP
to the pages generated for your visitors,
which might be helpful if you try keep your
pages useful to those who disable JavaScript
in their browser. (Such visitors might need
to explicitely enable the flash plugin, but that
is another, unavoidable, issue.)
JavaScript is used in the administrative
interface for the forms and manipulation
of shortcodes in the editor; but of course
you must have JavaScript enabled when you
log in to your site\(emthis does not
affect your visitors.
.PP
(Note that the flash video player has been
coded to work well with the free \fIGnash\fP
flash plugin. As of this writing, \fIGnash\fP
does not handle *\.mp4 files well, even though
it handles h\.264 video and AAC audio if they
are in an FLV container file.)
\
.SH
Building From the Source
.PP
\fBSWFPut\fP is distributed as a \fIZIP\fP
archive prepared for installation on a
\fIWordPress\fP site with the \(lqAdd New\(rq
item under the \(lqPlugins\(rq menu.
Therefore, there is no need to build the
package before use.
.PP
(You may skip forward to the
\fBUsage\fP section if you don't intend
to modify the player or plugin.)
.PP
The actual plugin is composed of
\fIPHP\fP code, and JavaScript for
the administrative parts, and neither of those
requires compilation or link editing.
The flash video player is a compiled program,
but binaries are included in the installable
package so that use does not require
compilation by the user. Of course,
the source code is included and the
binaries may be built if necessary
(or desired). Compiling the flash
program will require the \fIMing\fP
PHP extension. See the files
\f(CRMakefile\fR,
\f(CRmingtest/mingput\.php\fR, and
\f(CRmingtest/mainact\.inc\.php\fR
if you wish to learn to build the player.
.PP
If you wish to change the JavaScript code,
edit \f(CRjs/formxed\.dev\.js\fR, rather than
\f(CRjs/formxed\.js\fR.
The latter is merely a `minified' version
of the former; see \f(CRMakefile\fR.
.PP
This file (README*) is built with
\fIgroff\fP; see \f(CRdocs/Makefile\fR.
.PP
The Makefiles require a \fIUnix\fP-like or
\fIPOSIX\fP system. The default target
builds as necessary and then creates the
ZIP file.
\
.SH
Usage
.PP
A logged in session is assumed.
.PP
\fBSWFPut\fP installed will add an item
under the \(lqSettings\(rq named
\(lqSWFPut Plugin\(rq. Selecting that should
produce the plugin's configuration page.
The configuration page includes optional verbose
help, and so it will not be described here.
.PP
Below the editor for posts (and pages)
the plugin will place an interactive form
with the title
\(lqSWFPut Flash Video Shortcode\(rq.
Directly under the title is a row of buttons.
\
.SH
License
.PP
This program and all files included in
the distribution archive are under the
\f(BIGNU GPL\fP, version 3.
See the file \f(CRCOPYING\fP, which
should be present in the top-level
directory of the distribution archive.
\
\".TC
